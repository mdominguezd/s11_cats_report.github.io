---
title: "Cataloguing and Visualizing <Br> Big Geodata"
subtitle-image: slides/images/Satelligence_Logo_RGB_White_Negative.png
institute-image: https://pbs.twimg.com/profile_images/1640350393/wur_400x400.png
author: "Martín Domínguez Durán"
institute: "Wageningen University & Research"
date: today
title-slide-attributes:
  data-background-color: "#002966"
  data-background-size: 300px
format: 
  revealjs:
    # incremental: true
    fig-width: 500
    fig-height: 500
    template-partials:
      - slides/css/title-slide.html
    toc: true
    toc-depth: 1
    logo: slides/images/Satelligence_Logo_RGB_FC.png
    slide-number: true
    css: [slides/css/custom.css, slides/css/logo.css]
    multiplex: true
    theme: [simple, slides/css/satelligence.scss]
    show-slide-number: all
    controls: true
    bibliography: references.bib
    width: 1280
    height: 720
    include-after: |
          <script type="text/javascript">
            Reveal.on('ready', event => {
              if (event.indexh === 0) {
                document.querySelector("div.has-logo > img.slide-logo").style.display = "none";
              }
            });
            Reveal.addEventListener('slidechanged', (event) => {
              if (event.indexh === 0) {
                Reveal.configure({ slideNumber: null });
                document.querySelector("div.has-logo > img.slide-logo").style.display = "none";
              }
              if (event.indexh === 1) { 
                Reveal.configure({ slideNumber: 'c' });
                document.querySelector("div.has-logo > img.slide-logo").style.display = null;
              }
            });
          </script>
from: markdown+emoji
execute:
  echo: false
  enabled: true
---

# [1]{.circle} What is the problem?

------------------------------------------------------------------------

## Spatial data is big data

::: {layout-ncol="2"}
-   Hundreds of different satellites gather information (Variety)
-   Weekly to daily basis (Velocity)
-   At higher and higher resolutions (Volume)

![Satellites orbiting the earth.<Br>Taken from: miro.medium.com](https://miro.medium.com/v2/resize:fit:640/format:webp/0*IBnmTwrT3F8Qdyb5.gif){#fig-sats fig-scap="Taken from medium" fig-align="center" width="70%"}
:::

------------------------------------------------------------------------

## Spatial data challenges

-   How to **process** it?
-   How to **store** it?
-   How to easily **access** it?
-   How to **interact** with it?

------------------------------------------------------------------------

## Spatial data challenges

-   This makes [Spatial Data Infrastructures (SDIs)]{.box} a necessity.
-   Traditional SDI focus: [preservation \> accessibility]{.box}. [@durbha_advances_2023]
-   **New developments** can help change this.

::: {layout-ncol="3"}
[Cloud storage]{.big-circle}

[Data discovery (e.g. STAC)]{.big-circle}

[Visualization interfaces (e.g. TiTiler)]{.big-circle}
:::

------------------------------------------------------------------------

## Spatial data challenges

-   This makes [Spatial Data Infrastructures (SDIs)]{.box} a necessity.
-   Traditional SDI focus: [preservation \> accessibility]{.box}. [@durbha_advances_2023]
-   **New developments** can help change this.

::: {layout-ncol="3"}
[Cloud storage]{.big-circle}

[Data discovery (e.g. STAC)]{.big-circle-blue}

[Visualization interfaces (e.g. TiTiler)]{.big-circle-blue}
:::

------------------------------------------------------------------------

{{< include slides/sections/STAC_definition.md >}}

------------------------------------------------------------------------

{{< include slides/sections/TiTiler.md >}}

# [2]{.circle} Why does Satelligence care?

------------------------------------------------------------------------

## S11 works with big data

### Processing of the data :white_check_mark:

::: {layout-ncol="2"}
-   DPROF
-   Processs terabytes of spatial data
-   Efficient and scalable

![Estimate of area monitored by S11](slides/images/area_monitored_s11.png){#fig-s11-area fig-scap="Taken from ESA" fig-align="center" width="100%"}
:::

------------------------------------------------------------------------

## S11 works with big data

### When it comes to finding the data :x:

:::: {layout-ncol="2"}
-   Google Storage buckets
-   Gitlab repositories
-   The almighty

::: r-stack
![](slides/images/GS_buckets.png){.fragment fig-align="center" width="90%"}

![](slides/images/blockchain.png){.fragment fig-align="center" width="100%"}

![](slides/images/almighty.jpg){.fragment fig-align="center" width="50%"}
:::
::::

# [3]{.circle} How did I plan to help fix it?

------------------------------------------------------------------------

## Research questions:

1.  What are the **current challenges, practices, and user experiences** related to data discovery and data visualization in the company?
2.  How can **cloud-optimized data formats**, **cloud services** and SpatioTemporal Asset Catalog (**STAC**) specifications be **integrated** to enhance the process and experiences of discovering and visualizing big spatial data within the company?
3.  To what extent do dynamic tiling services perform in **visualizing different cloud-optimized data formats**?

------------------------------------------------------------------------

### [1]{.circle} Current state of data discovery and visualization

-   Carried out interviews to define the baseline scenario
-   Created a flowchart representing current workflow
-   Thematic Content Analysis (Use of LLMs)

------------------------------------------------------------------------

### [2]{.circle} Effective integration

-   Worked with a limited dataset for developing a proof of concept
-   Developed [[s11-cats](https://gitlab.com/satelligence/s11-cats)]{.box} for creating the STAC
-   Made the catalog queryable (Dynamic) [^1]
-   Deployed the services provided by [[eoAPI](https://eoapi.dev)]{.box} (Using GKE)
-   Customized applications when needed.

[^1]: More info: @sec-stac

------------------------------------------------------------------------

### [3]{.circle} Comparison of visualization different cloud-optimized formats

-   Used two dynamic tiling services for COGs and Zarrs [^2]
-   Assessed the performance by measuring the response times of requesting tiles on both services
-   Different colormaps and zoom levels to try to avoid caching.

[^2]: More info: @sec-cog-zarr

# [4]{.circle} What did I find?

------------------------------------------------------------------------

## [1]{.circle} The current state

::: {layout-ncol="1"}
![Workflow of current steps followed for data discovery and data visualization at S11.](img/Baseline_data_discovery_workflow.png){#fig-baseline fig-align="center" width="80%"}
:::

------------------------------------------------------------------------

## [1]{.circle} The current state

**TCA:**

::: {layout-ncol="1" style="font-size: 75%;"}
-   High dependency on colleagues for dataset location.
-   Disorganized structure of Google Storage Buckets.
-   Data familiarity helps users locate data more quickly.
-   Locating data is dependent on recurrent work with a specific dataset.
-   Not intuitive naming of repositories with datasets.
-   Understanding of diverse tools to access different data is currently necessary.
-   Download of data is required in most cases to visualize it.
-   Not one place where all existing data can be found.
:::

------------------------------------------------------------------------

## [1]{.circle} The current state

**TCA:**

::: {layout-ncol="1" style="font-size: 75%;"}
-   High dependency on colleagues for dataset location.
-   **Disorganized structure**[^3] of Google Storage Buckets.
-   Data familiarity helps users locate data more quickly.
-   Locating data is dependent on recurrent work with a specific dataset.
-   **Not intuitive naming**$^1$ of repositories with datasets.
-   **Understanding of diverse tools**$^1$ to access different data is currently necessary.
-   Download of data is required in most cases to visualize it.
-   **Not one place**$^1$ where all existing data can be found.
:::

[^3]: Similarly @miranda_espinosa_reviewing_2020 proposed that the main challenges are: "Different query interfaces and diverse metadata models".

------------------------------------------------------------------------

## [2]{.circle} Tools to create an S11 catalog

::: {style="text-align: center;"}
Datasets selected $\rightarrow$ [[S11-cats](https://gitlab.com/satelligence/s11-cats)]{.box} $\rightarrow$ Static catalog
:::

:::: {layout-ncol="2"}
![s11-cats repository](slides/images/CATS_repo.png){#fig-s11-cats width="100%"}


::: r-stack

![S11-cats main function overview](img/s11-cats.png){#fig-s11-cats}

![](https://www.litter-robot.com/media/wysiwyg/exotic-shorthair_1.png){.fragment fig-align="center" width=450}

![](https://i.pinimg.com/originals/11/ef/fa/11effa6bcf3fe387b110510e4baafe28.gif){.fragment fig-align="center" width="60%"}

:::
::::

------------------------------------------------------------------------

## [2]{.circle} The step towards a dynamic catalog

<iframe src="https://eoapi.dev" style="height:75%;width:100%;" title="eoAPI">

</iframe>

------------------------------------------------------------------------

## [2]{.circle} The step towards a dynamic catalog

### Multiple services

::: {layout-ncol="4"}
[PgSTAC]{.big-circle-blue}

[STAC-fastAPI]{.big-circle-blue}

[TiTiler-PgSTAC]{.big-circle}

[TiPg]{.big-circle}
:::

------------------------------------------------------------------------

## [2]{.circle} The step towards a dynamic catalog

### Multiple services

::: {layout-ncol="4"}
[PgSTAC]{.big-circle-blue}

[STAC-fastAPI]{.big-circle-blue}

[TiTiler-PgSTAC]{.big-circle-blue}

[TiTiler-xarray]{.big-circle-blue}
:::

<hr>

::: {style="text-align: center;"}
:wheel: Kubernetes :wheel:
:::

------------------------------------------------------------------------

## [2]{.circle} The importance of a dynamic catalog

{{< include slides/sections/check_interactive_api.md >}}

------------------------------------------------------------------------

## [2]{.circle} The deployed version of STAC Browser

<iframe src="https://eoapi.satelligence.com/browser" style="height:75%;width:100%;" title="eoAPI deployment for Satelligence data">

</iframe>

------------------------------------------------------------------------

## [2]{.circle} Effective integration

::: {layout-ncol="1"}
![New data discovery and visualization workflow](img/New_data_discovery_workflow.png){#fig-new-workflow width="100%"}
:::

## [3]{.circle} Data visualization

{{< include slides/sections/cog_zarr_comparison.qmd >}}

------------------------------------------------------------------------

## [3]{.circle} Data visualization

::: {layout-ncol="2"}
```{python}
#| echo: false
#| fig-cap: "Response times depending on zoom level and their respective trends for COG and Zarr data formats."
#| label: fig-comp-zoom

import pandas as pd
import matplotlib.pyplot as plt

data = pd.read_csv('https://raw.githubusercontent.com/mdominguezd/s11_cats_report.github.io/main/sections/request_time_results_6iter.csv')


fig, ax = plt.subplots(1,1,figsize= (7.5,3.5))

sns.regplot(data, x = 'zoom level', y = 'COG', ax = ax, color=s11_cmap(0), ci = 95, label='COG')
sns.regplot(data, x = 'zoom level', y = 'ZARR', ax = ax, color=s11_cmap(255), ci = 95, label= 'ZARR')
ax.set_ylabel('Response time [s]')

a = plt.legend()

```

```{python}
#| echo: false 
#| fig-cap: "Variation of chunk sizes in Zarr file depending on zoom level compared to a constant block size for COG data format."
#| label: fig-chunksize-zarr

df = pd.read_csv('https://raw.githubusercontent.com/mdominguezd/s11_cats_report.github.io/main/sections/chunksize_zarr.csv')

fig, ax = plt.subplots(1,1,figsize= (7.5,3.5))

ax = sns.scatterplot(df, x = 'pyramids', y = 'chunksize_x', color=s11_cmap(255), ax = ax, label = 'Horizontal chunks (x)')
ax = sns.scatterplot(df, x = 'pyramids', y = 'chunksize_y', color=s11_cmap(0), ax = ax, label = 'Vertical chunks (y)')

ax.axhline(y = 512)
ax.text(s = 'COG blocksize', x = 0, y = 512)

ax.set_ylabel('Chunk size [pixels]')
a = ax.set_xlabel('Pyramid\n' + r'$\rightarrow{}$zoom increase$\rightarrow{}$')

```
:::

Differences with @Barciauskas_NextGen_2024.

# [5]{.circle} What is next?

## Authentication

-   Add an authentication layer to the catalog still needs to be done and should be the next step to ensure the privacy of the data.

------------------------------------------------------------------------

## Vector data visualization

-   [TiPg](https://github.com/developmentseed/tipg) is a service included in the eoAPI deployment that wasn't used, but should be integrated to visualize, for instance, supply chain datasets.

# [6]{.circle} Conclusions

## [1]{.circle} Current state

-   Data discovery/visualization workflow at S11 is **complex** and **time-consuming**.
-   Major inefficiencies found were: High dependency on colleagues, disorganized Google Storage Buckets, and the need to download entire datasets for visualization.
-   A **user-friendly data discovery service** with integrated data visualization is **needed**

## [2]{.circle} Effective integration

-   Integration of cloud-optimized data formats, cloud services, and STAC specifications has the potential to improve data discovery and visualization at Satelligence.
-   I built upon eoAPI and developed a methodology to effectively do the integration of multiple data formats and services at S11. (i.e. COGs, Zarrs, eoAPI, TiTilers, etc.)

## [3]{.circle} Data visualization

-   COG tiles are, on average, 2.53 times faster to request than Zarr tiles.
-   Findings are in line with literature for data format comparison.
-   Future developments in Zarr could improve their performance (i.e. Improved pyramid generation).
-   Caching effect should be studied further.

------------------------------------------------------------------------

## References

::: {#refs}
:::

------------------------------------------------------------------------

## Appendix {#sec-stac}

### (What do you mean queryable? Aren't all catalogs queryable?)

::: {layout-ncol="2"}
##### Static catalog

-   Series of json files with hierarchical structure.
-   Can be browse easily (Like a website)

##### Dynamic catalog

-   Queryed through HTTP requests.
:::

How to go from one to the other? [eoAPI]{.box}

------------------------------------------------------------------------

## Appendix {#sec-cog-zarr}

#### (What are these weird "cloud-optimized" data formats?)

::: {layout-ncol="2"}
##### COGs

-   Geotiffs
-   Contain overviews
-   Have internal tiling

##### Zarrs

-   Divided in chunks
-   No overviews or pyramids
-   Work for storing multidimensional arrays
:::