::: {layout-ncol=2}
```{python}
#| echo: false
#| fig-cap: "Interactive comparison of rendering speed for COG and Zarr data formats"
#| label: fig-int-comp

import folium
from folium.plugins import DualMap

# Example URL template for the tiles
tiles_url_cog = "https://eoapi.satelligence.com/raster/collections/Example ZARR vs. COG/items/FBL_V5_2021_Riau_cog/tiles/WebMercatorQuad/{z}/{x}/{y}@1x?bidx=1&assets=data&unscale=false&resampling=nearest&reproject=nearest&colormap=[[[1.0,1.1],[0,47,0,255]],[[2.0,2.1],[55,76,33,255]],[[3.0,3.1],[105,140,60,255]],[[4.0,4.1],[178,199,140,255]],[[5.0,5.1],[164,198,121,255]],[[6.0,6.1],[198,112,85,255]],[[7.0,7.1],[170,219,167,255]],[[8.0,8.1],[87,162,164,255]],[[50.0,50.1],[255,183,1,255]],[[52.0,52.1],[238,223,201,255]],[[53.0,53.1],[185,120,119,255]],[[54.0,54.1],[218,170,241,255]],[[55.0,55.1],[40,205,167,255]],[[60.0,60.1],[208,227,243,255]],[[66.0,66.1],[166,219,204,255]],[[70.0,70.1],[255,255,255,255]],[[71.0,71.1],[185,136,94,255]],[[72.0,72.1],[125,165,142,255]],[[74.0,74.1],[188,85,123,255]],[[90.0,90.1],[241,195,132,255]]]&return_mask=true"

tiles_url_zarr = "https://eoapi.satelligence.com/zarr/tiles/WebMercatorQuad/{z}/{x}/{y}@1x?url=gs://s11-tiles/zarr/separate&variable=band_data&reference=false&decode_times=true&consolidated=true&colormap=[[[1.0,1.1],[0,47,0,255]],[[2.0,2.1],[55,76,33,255]],[[3.0,3.1],[105,140,60,255]],[[4.0,4.1],[178,199,140,255]],[[5.0,5.1],[164,198,121,255]],[[6.0,6.1],[198,112,85,255]],[[7.0,7.1],[170,219,167,255]],[[8.0,8.1],[87,162,164,255]],[[50.0,50.1],[255,183,1,255]],[[52.0,52.1],[238,223,201,255]],[[53.0,53.1],[185,120,119,255]],[[54.0,54.1],[218,170,241,255]],[[55.0,55.1],[40,205,167,255]],[[60.0,60.1],[208,227,243,255]],[[66.0,66.1],[166,219,204,255]],[[70.0,70.1],[255,255,255,255]],[[71.0,71.1],[185,136,94,255]],[[72.0,72.1],[125,165,142,255]],[[74.0,74.1],[188,85,123,255]],[[90.0,90.1],[241,195,132,255]]]&return_mask=true"

# Create a folium map centered at a specific latitude and longitude
m = DualMap(location=[0.596093307985066, 101.79719686886921], zoom_start=7)

# Add the tile layer to the map
folium.TileLayer(
    tiles=tiles_url_cog,
    attr='Example Tile Server',
    name='COG tiles',
    overlay=True,
    control=True
).add_to(m.m1)

folium.TileLayer(
    tiles=tiles_url_zarr,
    attr='Example Tile Server',
    name='Zarr tiles',
    overlay=True,
    control=True
).add_to(m.m2)

# Add layer control to toggle the tile layer
folium.LayerControl(collapsed=False).add_to(m.m1)
folium.LayerControl(collapsed=False).add_to(m.m2)

m.m1.height = (100,'%')
m.m2.height = (100,'%')
m
```

```{python}
#| echo: false
#| fig-cap: "Response times for tile requests depending on data format"
#| label: fig-format-comp

import seaborn as sns
import matplotlib.pyplot as plt
from matplotlib.colors import LinearSegmentedColormap
import xarray as xr
import pandas as pd

data = pd.read_csv('https://raw.githubusercontent.com/mdominguezd/s11_cats_report.github.io/main/sections/request_time_results_6iter.csv')

s11_cmap = LinearSegmentedColormap.from_list('s11', ['#96d7fa', '#ff4100'])
background_color = '#180066'
text_color = 'white'

sns.set(rc={'axes.facecolor' : 'white',
    'grid.color' : 'lightgray',
    'text.color' : background_color,
    'axes.labelcolor' : background_color,
    'xtick.color': background_color,
    'ytick.color': background_color,})

fig, ax = plt.subplots(1,1,figsize= (7.5,5))

sns.boxplot(data[['COG', 'ZARR']], palette = {'COG':s11_cmap(0), 'ZARR':s11_cmap(255)}, ax = ax, linecolor=background_color)
# sns.despine(trim = True, offset = -10, ax = ax)

ax.set_ylabel('Response time [s]')
a = ax.set_xlabel('Data format')

```
:::